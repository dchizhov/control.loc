<?php
/**
 * @file
 * Module for opening assign task form in popup.
 */

require_once 'includes/ai_assign_task.inc';
require_once DRUPAL_ROOT . "/modules/node/node.pages.inc";

/**
 * Implements hook_menu().
 */
function ai_assign_task_menu() {
  drupal_add_library('system', 'drupal.ajax');

  $items['all_tasks/%ctools_js/%'] = array(
    'title' => 'Assign task',
    'page arguments' => array(1, 2),
    'access callback' => TRUE,
    'page callback' => 'ai_assign_task_callback',
    'delivery callback' => 'ajax_deliver',
    'type' => MENU_CALLBACK,
  );

  $items['assign-task/nojs/node/%/%'] = array(
    'page callback' => '_ai_assign_task_assign_task',
    'page arguments' => array(1, 2, 3, 4),
    'access arguments' => array('permission name'),
    'type' => MENU_CALLBACK,
  );

  $items['assign-task/ajax/node/%/%'] = array(
      'delivery callback' => 'ajax_deliver',
    ) + $items['assign-task/nojs/node/%/%'];

  return $items;
}

/**
 * Implements hook_form_alter().
 */
function ai_assign_task_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == "assigned_tasks_node_form") {
    if (isset($form_state['build_info']['args']['short'])) {
      $task_id = arg(2);

      $form['field_nid_task'][LANGUAGE_NONE]['#default_value'] = $task_id;
      $form['field_nid_employee'][LANGUAGE_NONE]['#ajax'] = FALSE;
      $form['field_nid_task'][LANGUAGE_NONE]['#ajax'] = array(
        'callback' => 'ai_assign_task_employees_list_callback',
        'wrapper' => 'employee-list',
      );

      $employees = ai_assign_task_get_employees($task_id);

      if (!empty($employees)) {
        $form['field_nid_employee'][LANGUAGE_NONE]['#options'] = $employees;
        $form['field_nid_employee'][LANGUAGE_NONE]['#prefix'] = '<div id="employee-list">';
        $form['field_nid_employee'][LANGUAGE_NONE]['#suffix'] = '</div>';
      }
      else {
        $form['field_nid_employee'][LANGUAGE_NONE]['#type'] = 'item';
        $form['field_nid_employee'][LANGUAGE_NONE]['#markup'] = 'There are no available employees.';
      }

      $hidden_fields = array(
        'field_date_of_completion',
        'field_spent_time',
        'field_spent_time_in_seconds',
        'field_delay_time',
        'field_topic_at',
        'field_section_at',
      );
      __ai_assign_task_set_access_false($form, $hidden_fields);
    }

    // Hide settings for modal window form.
    $form['additional_settings']['#prefix'] = '<div style="display:none;">';
    $form['additional_settings']['#suffix'] = '</div>';
  }
}

/**
 * Hide form fields setting access false
 * First param - form
 * Second param - fields names
 */

function __ai_assign_task_set_access_false(&$form, array $fields) {
  foreach ($fields as $field) {
    $form[$field]['#access'] = FALSE;
  }
}

/**
 *
 */
function _ai_assign_task_assign_task($ajax, $type, $nid_employee, $nid_task) {
  global $user;

  $is_ajax = $ajax === 'ajax';
  $task = node_load($nid_task);
  $employee = node_load($nid_employee);

  $node = new stdClass();
  $node->title = $employee->title.' - '.$task->title;
  $node->type = 'assigned_tasks';
  node_object_prepare($node);
  $node->language = LANGUAGE_NONE;
  $node->uid = $user->uid;
  $node->status = 1;
  $node->field_nid_task['und'][0]['target_id'] = $task->nid;
  $node->field_nid_employee['und'][0]['target_id'] = $employee->nid;
  $node->field_status['und'][0]['tid'] = 2;

  node_save($node);

  if ($is_ajax) {
    $commands = array();

    return array(
      '#type' => 'ajax',
      '#commands' => $commands,
    );
  }
}
